import streamlit as st
import requests
from datetime import datetime

API_BASE_URL = "http://localhost:8000/parse"

st.set_page_config(page_title="–ü–∞—Ä—Å–µ—Ä–∏", page_icon="üï∏Ô∏è")
st.title("üîç –ü–∞—Ä—Å–µ—Ä–∏")

parser_names = []
with st.spinner("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–∞—Ä—Å–µ—Ä—ñ–≤..."):
    try:
        response = requests.get(f"{API_BASE_URL}/list")
        if response.ok:
            parser_names = response.json().get("parsers", [])
        else:
            st.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Å–µ—Ä—ñ–≤")
    except Exception as e:
        st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {str(e)}")

# üëâ –ó–∞–ø—É—Å–∫ —É—Å—ñ—Ö –ø–∞—Ä—Å–µ—Ä—ñ–≤
st.subheader("üß® –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Å—ñ –ø–∞—Ä—Å–µ—Ä–∏")

if st.button("üîÅ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—Å—ñ"):
    with st.spinner("–ü–∞—Ä—Å–∏–Ω–≥..."):
        response = requests.get(f"{API_BASE_URL}/")
        if response.ok:
            result = response.json()
            st.success("‚úÖ –£—Å—ñ –ø–∞—Ä—Å–µ—Ä–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—è")
            st.json(result)

            if "excel" in result:
                excel_path = result["excel"]
                excel_url = f"{API_BASE_URL}/download"

                excel_response = requests.get(excel_url)
                if excel_response.ok:
                    st.download_button(
                        label="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel (–≤—Å—ñ –ø–∞—Ä—Å–µ—Ä–∏)",
                        data=excel_response.content,
                        file_name=excel_path.split("/")[-1],
                        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                    )
                else:
                    st.warning("‚ö†Ô∏è Excel-—Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π.")
        else:
            st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code} - {response.text}")

# üëâ –ó–∞–ø—É—Å–∫ –æ–¥–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞
st.subheader("üéØ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –ø–∞—Ä—Å–µ—Ä")

if parser_names:
    selected_parser = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–∞—Ä—Å–µ—Ä", parser_names)

    if st.button("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –æ–±—Ä–∞–Ω–∏–π"):
        with st.spinner("–ü–∞—Ä—Å–∏–Ω–≥..."):
            response = requests.post(f"{API_BASE_URL}/", json={"parser": selected_parser})
            if response.ok:
                result = response.json()
                st.success("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–≤—Å—è")
                st.json(result)

                if "excel" in result:
                    filename = result["excel"].split("/")[-1]
                    download_url = f"{API_BASE_URL}/download/{selected_parser}"

                    download_response = requests.get(download_url)
                    if download_response.ok:
                        st.download_button(
                            label="üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Excel (—Ü–µ–π –ø–∞—Ä—Å–µ—Ä)",
                            data=download_response.content,
                            file_name=filename,
                            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                        )
                    else:
                        st.warning("‚ö†Ô∏è Excel-—Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π.")
            else:
                st.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {response.status_code} - {response.text}")
else:
    st.warning("‚ö†Ô∏è –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–∞—Ä—Å–µ—Ä—ñ–≤")
